<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<context:component-scan base-package="com.sharing">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	<!-- 1.引入配置文件 -->
	<context:property-placeholder location="classpath:config/dbconfig.properties"/>
	<!-- 数据源 -->
	<bean id="pooledDataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl" value="jdbc:mysql://localhost/sharing?autoReconnect=true&amp;useSSL=true&amp;characterEncoding=utf-8"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123456"></property>
		<property name="maxPoolSize" value="20" />
        <property name="minPoolSize" value="1" />
        <property name="initialPoolSize" value="3" />
        <property name="maxIdleTime" value="15" />
	</bean>
	
	<!-- 2.配置和MyBatis的整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定myBatis全局配置的文件 -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybtis,mapper 文件 -->
		<!-- <property name="mapperLocations" value="classpath:mapper/*.xml"></property> -->
	</bean>
	
	
	<!-- 3.配置扫描器 将mybatis的接口实现加入到Ioc容器中-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有的dao 接口的实现 加入到Ioc容器-->
		<property name="basePackage" value="com.sharing.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> 
	</bean>
	
	<!-- 4.事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事务，使用xml 配置形式的事务（主要使用配置式的） -->
	
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.sharing.service..*(..))" id="txPoint"/>
		<!-- 增强事务 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>

	<!-- 配置事务增强 -->
    <tx:advice id="txAdvice">
    	<tx:attributes>
    		<!-- 所有方法都是事务方法 -->
    		<tx:method name="*"/>
    		
    		<!-- 以get开始的所有方法 -->
    		<tx:method name="get*" read-only="true"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- Spring 配置文件的核心点（数据源、与mybatis的整合、事务控制） -->
</beans>
